// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using QuizGameAPI.data;

#nullable disable

namespace QuizGameAPI.Migrations
{
    [DbContext(typeof(QuizGameContext))]
    [Migration("20241126203350_FixDatabaseSchema")]
    partial class FixDatabaseSchema
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("QuizGameAPI.models.Answer", b =>
                {
                    b.Property<int>("AnswerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AnswerId"));

                    b.Property<bool>("IsCorrect")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("QuestionId")
                        .HasColumnType("int");

                    b.HasKey("AnswerId");

                    b.HasIndex("QuestionId");

                    b.ToTable("Answers");

                    b.HasData(
                        new
                        {
                            AnswerId = 1,
                            IsCorrect = true,
                            Name = "Bill Gates",
                            QuestionId = 1
                        },
                        new
                        {
                            AnswerId = 2,
                            IsCorrect = false,
                            Name = "Steve Jobs",
                            QuestionId = 1
                        },
                        new
                        {
                            AnswerId = 3,
                            IsCorrect = false,
                            Name = "Elon Musk",
                            QuestionId = 1
                        },
                        new
                        {
                            AnswerId = 4,
                            IsCorrect = false,
                            Name = "Mark Zuckerberg",
                            QuestionId = 1
                        },
                        new
                        {
                            AnswerId = 5,
                            IsCorrect = true,
                            Name = "Tokyo",
                            QuestionId = 2
                        },
                        new
                        {
                            AnswerId = 6,
                            IsCorrect = false,
                            Name = "Kyoto",
                            QuestionId = 2
                        },
                        new
                        {
                            AnswerId = 7,
                            IsCorrect = false,
                            Name = "Osaka",
                            QuestionId = 2
                        },
                        new
                        {
                            AnswerId = 8,
                            IsCorrect = false,
                            Name = "Hokkaido",
                            QuestionId = 2
                        },
                        new
                        {
                            AnswerId = 9,
                            IsCorrect = true,
                            Name = "HyperText Transfer Protocol",
                            QuestionId = 3
                        },
                        new
                        {
                            AnswerId = 10,
                            IsCorrect = false,
                            Name = "HyperText Transfer Program",
                            QuestionId = 3
                        },
                        new
                        {
                            AnswerId = 11,
                            IsCorrect = false,
                            Name = "Hyperlink Text Protocol",
                            QuestionId = 3
                        },
                        new
                        {
                            AnswerId = 12,
                            IsCorrect = false,
                            Name = "Hyperlink Transfer Program",
                            QuestionId = 3
                        });
                });

            modelBuilder.Entity("QuizGameAPI.models.Game", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("QuizId")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("QuizId");

                    b.ToTable("Games");
                });

            modelBuilder.Entity("QuizGameAPI.models.Question", b =>
                {
                    b.Property<int>("QuestionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("QuestionId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("QuizId")
                        .HasColumnType("int");

                    b.HasKey("QuestionId");

                    b.HasIndex("QuizId");

                    b.ToTable("Questions");

                    b.HasData(
                        new
                        {
                            QuestionId = 1,
                            Name = "Who is the founder of Microsoft?",
                            QuizId = 1
                        },
                        new
                        {
                            QuestionId = 2,
                            Name = "What is the capital of Japan?",
                            QuizId = 1
                        },
                        new
                        {
                            QuestionId = 3,
                            Name = "What does HTTP stand for?",
                            QuizId = 1
                        },
                        new
                        {
                            QuestionId = 4,
                            Name = "Which country is known as the Land of the Rising Sun?",
                            QuizId = 1
                        },
                        new
                        {
                            QuestionId = 5,
                            Name = "What is the national flower of India?",
                            QuizId = 1
                        },
                        new
                        {
                            QuestionId = 6,
                            Name = "What is the chemical symbol for gold?",
                            QuizId = 2
                        },
                        new
                        {
                            QuestionId = 7,
                            Name = "Which gas is most abundant in the Earth's atmosphere?",
                            QuizId = 2
                        },
                        new
                        {
                            QuestionId = 8,
                            Name = "What is the boiling point of water in Celsius?",
                            QuizId = 2
                        },
                        new
                        {
                            QuestionId = 9,
                            Name = "Who invented the telephone?",
                            QuizId = 2
                        },
                        new
                        {
                            QuestionId = 10,
                            Name = "What does DNA stand for?",
                            QuizId = 2
                        },
                        new
                        {
                            QuestionId = 11,
                            Name = "Who was the first Emperor of Rome?",
                            QuizId = 3
                        },
                        new
                        {
                            QuestionId = 12,
                            Name = "When did World War II end?",
                            QuizId = 3
                        },
                        new
                        {
                            QuestionId = 13,
                            Name = "Which dynasty built the Great Wall of China?",
                            QuizId = 3
                        },
                        new
                        {
                            QuestionId = 14,
                            Name = "Who was known as the Iron Lady?",
                            QuizId = 3
                        },
                        new
                        {
                            QuestionId = 15,
                            Name = "What year did the Berlin Wall fall?",
                            QuizId = 3
                        },
                        new
                        {
                            QuestionId = 16,
                            Name = "What is the highest mountain in the world?",
                            QuizId = 4
                        },
                        new
                        {
                            QuestionId = 17,
                            Name = "Which ocean is the largest?",
                            QuizId = 4
                        },
                        new
                        {
                            QuestionId = 18,
                            Name = "What is the capital city of Australia?",
                            QuizId = 4
                        },
                        new
                        {
                            QuestionId = 19,
                            Name = "Which country is famous for its maple syrup?",
                            QuizId = 4
                        },
                        new
                        {
                            QuestionId = 20,
                            Name = "What is the smallest ocean in the world?",
                            QuizId = 4
                        },
                        new
                        {
                            QuestionId = 21,
                            Name = "What is 10 squared?",
                            QuizId = 5
                        },
                        new
                        {
                            QuestionId = 22,
                            Name = "What is 7 times 8?",
                            QuizId = 5
                        },
                        new
                        {
                            QuestionId = 23,
                            Name = "What is the square root of 81?",
                            QuizId = 5
                        },
                        new
                        {
                            QuestionId = 24,
                            Name = "What is the integral of 2x?",
                            QuizId = 5
                        },
                        new
                        {
                            QuestionId = 25,
                            Name = "What is the value of 5 factorial (5!)?",
                            QuizId = 5
                        });
                });

            modelBuilder.Entity("QuizGameAPI.models.Quiz", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Quizzes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "General Knowledge"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Science"
                        },
                        new
                        {
                            Id = 3,
                            Name = "History"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Geography"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Math"
                        });
                });

            modelBuilder.Entity("QuizGameAPI.models.Answer", b =>
                {
                    b.HasOne("QuizGameAPI.models.Question", "Question")
                        .WithMany("Answers")
                        .HasForeignKey("QuestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Question");
                });

            modelBuilder.Entity("QuizGameAPI.models.Game", b =>
                {
                    b.HasOne("QuizGameAPI.models.Quiz", "Quiz")
                        .WithMany("Games")
                        .HasForeignKey("QuizId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Quiz");
                });

            modelBuilder.Entity("QuizGameAPI.models.Question", b =>
                {
                    b.HasOne("QuizGameAPI.models.Quiz", "Quiz")
                        .WithMany("Questions")
                        .HasForeignKey("QuizId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Quiz");
                });

            modelBuilder.Entity("QuizGameAPI.models.Question", b =>
                {
                    b.Navigation("Answers");
                });

            modelBuilder.Entity("QuizGameAPI.models.Quiz", b =>
                {
                    b.Navigation("Games");

                    b.Navigation("Questions");
                });
#pragma warning restore 612, 618
        }
    }
}
